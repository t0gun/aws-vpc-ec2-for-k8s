name: Terraform (Manual Workflow)

on:

  workflow_dispatch:
    inputs:
      action:
        description: "what do you want to do?"
        required: true
        type: choice
        options: [plan, apply, destroy]
        default: plan

permissions:
  id-token: write  # needed for OIDC
  contents: read  # needed for checkout

concurrency:
  group: tf-manual
  cancel-in-progress: false # important to not mess up with state

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: production
    env:
     TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v5.0.0

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3

      - name: configure aws credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4.3.1
        with:
          role-to-assume: arn:aws:iam::555066115752:role/github-actions
          aws-region: ca-central-1

      - name: Verify AWS Identity
        run: aws sts get-caller-identity

      - name: Terraform init
        working-directory: infra
        run: terraform init -input=false

      - name: Terraform Plan
        if: inputs.action == 'plan'
        working-directory: infra
        run: terraform plan -input=false -lock-timeout=5m

      - name: Terraform Apply
        if: inputs.action == 'apply'
        working-directory: infra
        run: terraform apply -auto-approve -input=false -lock-timeout=5m

      - name: Terraform Destroy
        if: inputs.action == 'destroy'
        working-directory: infra
        run: terraform destroy -auto-approve -input=false -input=false -lock-timeout=5m

      - name: Terraform Outputs JSON
        if: inputs.action != 'destroy'
        working-directory: infra
        run: terraform output -json > tf-outputs.json || echo '{}' > tf-outputs.json

      - name:   Upload outputs artifact
        if: inputs.action != 'destroy'
        uses: actions/upload-artifact@v4.6.2
        with:
          name: tf-outputs-${{ github.run_id }}
          path: infra/tf-outputs.json
          retention-days: 14
          if-no-files-found: error

      - name: Pretty summary of outputs
        if: inputs.action != 'destroy'
        run: |
            echo "## Terraform Outputs" >> $GITHUB_STEP_SUMMARY
            if command -v jq >/dev/null 2>&1; then
              jq -r 'to_entries | .[] | "- **\(.key)**: \(.value.value)"' infra/tf-outputs.json >> $GITHUB_STEP_SUMMARY
            else
              echo "\`jq\` not found; raw JSON below:" >> $GITHUB_STEP_SUMMARY
              cat infra/tf-outputs.json >> $GITHUB_STEP_SUMMARY    
